{
	"info": {
		"_postman_id": "5e3bd754-5c54-4845-994f-a3b17a6e08d5",
		"name": "Upload-TestSuite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7409667",
		"_collection_link": "https://interstellar-satellite-4024.postman.co/workspace/QA~1c609484-b2b1-4657-9c67-a49ef010af09/collection/7409667-5e3bd754-5c54-4845-994f-a3b17a6e08d5?action=share&source=collection_link&creator=7409667"
	},
	"item": [
		{
			"name": "Authenticate X-Ray",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"pm.environment.set(\"xray-token\", jsonData);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\": \"{{client_secret}}\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://xray.cloud.getxray.app/api/v2/authenticate",
					"protocol": "https",
					"host": [
						"xray",
						"cloud",
						"getxray",
						"app"
					],
					"path": [
						"api",
						"v2",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload-TestCases",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Saving Test ID's\", function(){\r",
							"let response = pm.response.json();\r",
							"let testIds = response.updatedOrCreatedTests.map(test => test.id);\r",
							"pm.environment.set(\"testIdsArray\", JSON.stringify(testIds));\r",
							"console.log(\"testIdsArray =\", pm.environment.get(\"testIdsArray\"));\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{xray-token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/COSM/Desktop/Testcases/poc.feature"
						}
					]
				},
				"url": {
					"raw": "https://xray.cloud.getxray.app/api/v2/import/feature?projectKey=",
					"protocol": "https",
					"host": [
						"xray",
						"cloud",
						"getxray",
						"app"
					],
					"path": [
						"api",
						"v2",
						"import",
						"feature"
					],
					"query": [
						{
							"key": "projectKey",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Issue ID of TestSet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();",
							"let issueId = response?.data?.getTestSets?.results?.[0]?.issueId;",
							"if (issueId) {",
							"    pm.environment.set(\"testSetIssueId\", issueId);",
							"    console.log(\"Saved issueId:\", issueId);",
							"} else {",
							"    console.warn(\"issueId not found in response.\");",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{xray-token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query GetTestSet($jql: String!) {\n  getTestSets(jql: $jql, limit: 1) {\n    results {\n      issueId\n    }\n  }\n}\n",
						"variables": "{\n  \"jql\": \"key = {{testSet}}\"\n}"
					}
				},
				"url": {
					"raw": "https://xray.cloud.getxray.app/api/v2/graphql",
					"protocol": "https",
					"host": [
						"xray",
						"cloud",
						"getxray",
						"app"
					],
					"path": [
						"api",
						"v2",
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Map-Testcases-To-TestSet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Retrieve stringified array from env\r",
							"let testIdsArrayStr = pm.environment.get(\"testIdsArray\");\r",
							"if (!testIdsArrayStr) {\r",
							"  throw new Error(\"testIdsArray environment variable is missing!\");\r",
							"}\r",
							"\r",
							"let testIdsArray = JSON.parse(testIdsArrayStr);\r",
							"// Reverse the array\r",
							"testIdsArray.reverse();\r",
							"\r",
							"let testIdsGraphQL = testIdsArray.map(id => `\"${id}\"`).join(\", \");\r",
							"let issueId = pm.environment.get(\"testSetIssueId\");\r",
							"let mutation = `\r",
							"mutation {\r",
							"  addTestsToTestSet(issueId: \"${issueId}\", testIssueIds: [${testIdsGraphQL}]) {\r",
							"    addedTests\r",
							"    warning\r",
							"  }\r",
							"}`;\r",
							"pm.environment.set(\"dynamicGraphQLMutation\", mutation);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{xray-token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{{dynamicGraphQLMutation}}\r\n",
						"variables": ""
					}
				},
				"url": {
					"raw": "https://xray.cloud.getxray.app/api/v2/graphql",
					"protocol": "https",
					"host": [
						"xray",
						"cloud",
						"getxray",
						"app"
					],
					"path": [
						"api",
						"v2",
						"graphql"
					]
				}
			},
			"response": []
		}
	]
}
